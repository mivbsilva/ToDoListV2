@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthStateService AuthState
@implements IDisposable

<div class="layout-container min-h-screen flex flex-col">
    <header class="bg-red-500 text-white p-4 flex justify-between">
        <div>
            <h1 class="text-xl font-bold">
                <a href="/" class="text-white">ToDoList</a>
            </h1>
        </div>

        <div>
            <ul class="flex justify-between">
                <li class="mr-4 text-center"><a href="/sobre" class="text-white hover:underline font-bold">Sobre</a></li>
                
                @if (AuthState?.IsLoggedIn != true)
                {
                    <li class="mr-4 text-center"><a href="/cadastro" class="text-white hover:underline font-bold">Cadastro</a></li>
                    <li class="mr-4 text-center"><a href="/login" class="text-white hover:underline font-bold">Login</a></li>
                }
                
                @if (AuthState?.IsLoggedIn == true)
                {
                    <li class="mr-4 text-center"><a href="/dashboard" class="text-white hover:underline font-bold">Dashboard</a></li>
                    <li class="mr-4 text-center">
                        <button @onclick="Logout" class="text-white hover:underline font-bold bg-transparent border-0 cursor-pointer">
                            Logout
                        </button>
                    </li>
                }
            </ul>
        </div>
    </header>

    <main class="flex flex-col flex-grow p-4 text-center @(EhDashboard ? "" : "justify-center")">
        @Body
    </main>

    <footer class="bg-red-500 text-white text-center p-4 font-bold">
        <p>&copy; 2025 ToDoList</p>
    </footer>
</div>

@code {
    private bool EhDashboard => NavigationManager.Uri.Contains("/dashboard");
    
    protected override void OnInitialized()
    {
        if (AuthState != null)
        {
            AuthState.OnAuthStateChanged += StateHasChanged;
        }
    }

    private void Logout()
    {
        AuthState?.Logout();
        NavigationManager.NavigateTo("/login");
    }

    public void Dispose()
    {
        if (AuthState != null)
        {
            AuthState.OnAuthStateChanged -= StateHasChanged;
        }
    }
}